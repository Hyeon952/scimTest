server:
  port: 8180

spring:
  application:
    name: scimTest
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://auth.duclo.net/realms/vms-application-realm
          jwk-set-uri: https://auth.duclo.net/realms/vms-application-realm/protocol/openid-connect/certs
  cloud:
    config:
      enabled: false
  main:
#    allow-bean-definition-overriding: true
    web-application-type: reactive
  datasource:
    device:
      driver-class-name: com.mysql.cj.jdbc.Driver
      username: root
      password: init123
      url: jdbc:mysql://localhost:3306/device_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      hikari.maximum-pool-size: 5
      #maximum idle time for connection in milliseconds
      hikari.idle-timeout: 60000
      #maximum number of milliseconds that a client will wait for a connection
      hikari.connection-timeout: 10000
      # maximum lifetime in milliseconds of a connection in the pool after it is closed.
      hikari.max-lifetime: 30000
      #minimum number of idle connections maintained by HikariCP in a connection pool
      hikari.minimum-idle: 10
      hikari.pool-name: HikariDevicePool
#    hikari:
#      jdbc-url: jdbc:mysql://localhost:3306/device_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
#      driver-class-name: com.mysql.cj.jdbc.Driver
#      username: root
#      password: init123
#      pool-name: HikariDefaultPool
#    url: jdbc:mysql://localhost:3306/device_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    username: root
#    password: init123


  jpa:
    show-sql: true
    properties.hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
    hibernate:
    globally_quoted_identifiers: true
    naming:
      strategy: org.hibernate.cfg.ImprovedNamingStrategy
      physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

security:
  cors:
    allowed-origins: "*"
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: Authorization,Content-Type,Accept-Language

scim:
  downstream:
    first-server-url: https://apis.keycloak/api  # Keycloak Server Base URL
    second-server-url: https://duclo.com/api  # Backend Base Url

management:
  endpoints:
    web:
      exposure:
        include: "*" # Expose all actuator endpoints (in production, only expose the necessary ones)
  endpoint:
    health:
      show-details: "always"

resilience4j:
  circuitbreaker:
    instances:
      firstServer: # Circuit breaker for the first server
        failureRateThreshold: 50 # Transition to OPEN state if failure rate exceeds 50%
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        waitDurationInOpenState: 5s # Remain in OPEN state for 5 seconds
        automaticTransitionFromOpenToHalfOpenEnabled: true
      secondServer: # Circuit breaker for the second server
        failureRateThreshold: 50
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        waitDurationInOpenState: 5s
        automaticTransitionFromOpenToHalfOpenEnabled: true
  retry:
    instances:
      serverApiRetry: # Retry configuration
        maxAttempts: 3 # Maximum 3 retries
        waitDuration: 2s # Wait 2 seconds before retrying
        retryExceptions:
          - org.springframework.web.reactive.function.client.WebClientResponseException
          - java.net.ConnectException
logging:
  level:
    root: INFO
#    org.springframework.security: DEBUG

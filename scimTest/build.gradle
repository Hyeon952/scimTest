plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'ai.duclo'
version = '0.0.1-SNAPSHOT'
description = 'scimTest'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
//    implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Okta Bearer 토큰 인증 처리
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-oauth2-resource-server'
	// JWT 디코딩에 필요한 JOSE(JSON Object Signing and Encryption) 모듈 추가
	implementation 'org.springframework.security:spring-security-oauth2-jose'

	// Spring Boot Starter for Bean Validation.
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// 비동기 로그 처리를 위한 logback 설정
	implementation 'ch.qos.logback:logback-classic'

	// 운영 환경 모니터링: 액츄에이터와 마이크로미터
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Resilience4j BOM을 사용하여 모든 모듈의 버전 충돌을 방지합니다.
	implementation platform('io.github.resilience4j:resilience4j-bom:2.2.0')

	// Spring Boot와 Resilience4j를 통합해주는 모듈 추가
	implementation 'io.github.resilience4j:resilience4j-spring-boot2'
	// 이제 개별 모듈에는 버전을 명시하지 않습니다.
	implementation 'io.github.resilience4j:resilience4j-circuitbreaker'
	implementation 'io.github.resilience4j:resilience4j-retry'
	implementation 'io.github.resilience4j:resilience4j-reactor'


    //Java JWT library
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
